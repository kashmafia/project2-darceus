{"version":3,"sources":["components/SellerForm.js","components/Hero.js","components/Cart.js","components/Dashboard.js","components/Header.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["SellerForm","props","name","value","cancelButton","useRef","useState","company_website","price","about","file_upload","product","setProduct","handleInputs","e","target","trigger","Root","show","as","Fragment","className","initialFocus","onClose","setTrigger","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","onSubmit","requestData","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","htmlFor","type","id","placeholder","onChange","rows","defaultValue","onClick","ref","Main","sellForm","setSellForm","Cart","item","open","setOpen","setCart","cartTotal","setCartTotal","removeItem","removeProduct","removeItemToCart","a","movies","hardCopy","message","filter","useEffect","totalVal","i","length","total","Title","XIcon","map","idx","src","image","alt","href","quantity","getLink","link","addItemToCart","window","location","alert","checkout","Dashboard","products","showItem","setShowItem","description","class","newItem","some","newCart","addItem","solutions","icon","BadgeCheckIcon","CurrencyDollarIcon","LightningBoltIcon","resources","DiPostgresql","DiPython","DiReact","DiHeroku","classNames","classes","Boolean","join","Header","username","Button","MenuIcon","Group","ChevronDownIcon","Panel","action","focus","Footer","absolute","Date","getFullYear","App","args","parse","document","getElementById","text","list_item","user_cart","cart","user_name","Hero","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.223c6863.chunk.js","sourcesContent":["import React, { Fragment, useRef, useState } from 'react'\nimport { Dialog, Transition } from '@headlessui/react';\n\n\nexport default function SellerForm(props) {\n\n  const cancelButton = useRef(null);\n\n  //  const [productName, setProductName] = useState('');\n  //  const [productPrice, setProductPrice] = useState('');\n  //  const [productAbout, setProductAbout] = useState('');\n\n\n  const [product, setProduct] = useState({\n    company_website: '',\n    price: '',\n    about: '',\n    file_upload: '',\n\n  });\n\n  let name, value;\n  const handleInputs = (e) => {\n    name = e.target.name;\n    value = e.target.value;\n\n    setProduct({ ...product, [name]: value });\n\n  };\n\n\n  //  const[formData, setFormData] = useReducer(formReducer, {});\n  //  const [submitting, setSubmitting] = useState(false);\n\n  // Creating a submit variable indicating that the item is listed\n  //  const successfulSubmit = event => {\n  //      event.preventDefault();\n  //      setSubmitting(true);\n\n  //      setTimeout(() => {\n  //          setSubmitting(false);\n  //          setFormData({\n  //              reset: true\n  //          })\n  //      }, 3000)\n  //  }\n\n  // saving form data to database\n  function onClickSave() {\n    const requestData = {\n      company_website: product.company_website,\n      price: product.price,\n      about: product.about,\n      file_upload: product.file_upload,\n    };\n\n    fetch('/save_product', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(requestData),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n      });\n  }\n\n  // Displaying form data on page\n  //  const handleChange = event => {\n  //      setFormData({\n  //          name: event.target.name,\n  //          value: event.target.value,\n  //      });\n  //  }\n\n  return (props.trigger) ? (\n    <>\n\n      <Transition.Root show={props.trigger} as={Fragment}>\n        <Dialog as=\"div\" className=\"fixed z-10 inset-0 overflow-y-auto\" initialFocus={cancelButton} onClose={() => props.setTrigger(false)}>\n          <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0\"\n              enterTo=\"opacity-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n            </Transition.Child>\n\n            {/* This element is to trick the browser into centering the modal contents. */}\n            <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n              &#8203;\n            </span>\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n              enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n              leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            >\n              <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n                <div className=\"md:grid md:grid-cols-3 md:gap-10\">\n                  <div className=\"mt-5 md:mt-0 md:col-span-10\">\n\n                    {/* Temporary Debugging Item Mapping */}\n\n                    {/* {submitting &&\n                   <div>\n                       You are listing the following:\n                       <ul>\n                           {Object.entries(formData).map(([name, value]) => (\n                               <li key={name}><strong>{name}</strong>:{value.toString()}</li>\n                           ))}\n                       </ul>\n                  \n                   </div>\n                   } */}\n\n\n                    <form onSubmit={onClickSave}>\n                      <fieldset>\n                        <div className=\"shadow sm:rounded-md sm:overflow-hidden\">\n                          <div className=\"px-4 py-5 bg-white space-y-6 sm:p-6\">\n                            <div className=\"grid grid-cols-3 gap-6\">\n                              <div className=\"col-span-3 md:col-span-2\">\n\n                                <label htmlFor=\"company_website\" className=\"block text-md font-medium text-gray-700\">\n                                  Item name\n                                </label>\n\n                                <div className=\"mt-1 flex rounded-md shadow-sm\">\n                                  <input\n                                    type=\"text\"\n                                    name=\"company_website\"\n                                    id=\"company_website\"\n                                    className=\"focus:ring-indigo-500 focus:border-indigo-500 flex-1 block w-full rounded-none rounded-r-md sm:text-sm border-gray-300\"\n                                    placeholder=\"Item's name\"\n                                    //  onChange={(e)=> setProductName(e.target.value)}\n                                    onChange={handleInputs}\n                                    value={product.company_website}\n\n                                  />\n                                </div>\n                              </div>\n                            </div>\n\n                            <div>\n                              <label htmlFor=\"price\" className=\"block text-sm font-medium text-gray-700\">\n                                Item Price\n                              </label>\n\n                              <div className=\"mt-1\">\n                                <input\n                                  type=\"text\"\n                                  id=\"price\"\n                                  name=\"price\"\n                                  className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md\"\n                                  placeholder=\"Enter Fixed Price\"\n                                  //  onChange={(e)=> setProductPrice(e.target.value)}\n                                  onChange={handleInputs}\n                                  value={product.price}\n\n                                />\n                              </div>\n                            </div>\n\n\n                            <div>\n                              <label htmlFor=\"about\" className=\"block text-sm font-medium text-gray-700\">\n                                Description\n                              </label>\n\n                              <div className=\"mt-1\">\n                                <textarea\n                                  id=\"about\"\n                                  name=\"about\"\n                                  rows={3}\n                                  className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md\"\n                                  placeholder=\"An item\"\n                                  defaultValue={''}\n                                  //  onChange={(e)=> setProductAbout(e.target.value)}\n                                  onChange={handleInputs}\n                                  value={product.about}\n\n                                />\n                              </div>\n                              <p className=\"mt-2 text-sm text-gray-500\">\n                                Brief description for your item.\n                              </p>\n                            </div>\n\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700\">Photo of your item</label>\n                              <div className=\"mt-1\">\n                                <textarea\n                                  id=\"file_upload\"\n                                  name=\"file_upload\"\n                                  rows={3}\n                                  className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md\"\n                                  placeholder=\"Link\"\n                                  defaultValue={''}\n                                  //  onChange={(e)=> setProductAbout(e.target.value)}\n                                  onChange={handleInputs}\n                                  value={product.file_upload}\n\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n                            <button\n                              type=\"submit\"\n                              className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                            >\n                              Save\n                            </button>\n                            <button\n                              type=\"button\"\n                              className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n                              onClick={() => props.setTrigger(false)}\n                              ref={cancelButton}\n                            >\n                              Cancel\n                            </button>\n                          </div>\n                        </div>\n                      </fieldset>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </Transition.Child>\n          </div>\n        </Dialog>\n      </Transition.Root>\n    </>\n\n  ) : \"\";\n}\n\n\n","import '../App.css'\nimport React, {useState} from 'react'\nimport SellerForm from './SellerForm';\n\n\nfunction Main () {\n    const [sellForm, setSellForm] = useState(false)\n    return (\n        <div>\n        <main>\n            <div className=\"mt-24 mx-auto max-w-7xl px-4 sm:mt-32 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n                <div className=\"sm:text-center lg:text-left\">\n                    <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\n                    <span className=\"block xl:inline\">Propriete Centre  </span>\n                    <span className=\"block text-indigo-600 xl:inline\">headless E-Commerce</span>\n                    </h1>\n                    <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\n                    The majority of online marketplaces today are often overloading consumers with massive amounts \n                    of information at once. This offers a very unpleasant user experience. Here at Propriete Centre, \n                    we allow our users to buy, sell, and flip their propetiers with their own listings. Our simple \n                    design creates a seamless and straightforward experience for our customers when browsing through \n                    the website. With a simple click of the button, you too can start selling your own properties too!\n                    </p>\n                    <div className=\"mt-5 sm:mt-8 sm:flex sm:justify-center lg:justify-start\">\n                    <div className=\"rounded-md shadow\">\n                        <button\n                        onClick={() => setSellForm(true)}\n                        className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700 md:py-4 md:text-lg md:px-10\"\n                        >\n                        Start selling\n                        </button>\n                    </div>\n                    </div>\n                </div>\n\n                <SellerForm trigger={sellForm} setTrigger={setSellForm}/>\n            </div>\n        </main>\n        </div>\n    );\n}\n\nexport default Main;","import { Fragment, useState, useEffect } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { XIcon } from '@heroicons/react/outline'\n\nexport default function Cart({item, open, setOpen, setCart}) {\n  const [cartTotal, setCartTotal] = useState(0);\n  // const [paymentLink, setPaymentLink] = useState(null);\n\n  const checkout = () => {\n    async function addItemToCart(cartTotal, item){\n      const getLink = await fetch('/create-checkout-session', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(\n          {\n            'subtotal': cartTotal,\n            'cart-item': item\n          }),\n      })\n\n      const link = await getLink.json();\n      return link;\n    }\n\n    addItemToCart(cartTotal, item).then(response => {\n      if(response.message === 'success'){\n        console.log(response.link);\n        window.location.href = response.link;\n      } else{\n        alert(response.message);\n      }\n    });\n  }\n\n\n\n  const removeItem = async (removeProduct) => {\n    let hardCopy = item;\n\n    async function removeItemToCart(removeProduct) {\n      const response = await fetch('/remove_from_cart', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({'remove-item': removeProduct}),\n      });\n      const movies = await response.json();\n      return movies;\n    }\n\n    removeItemToCart(removeProduct).then(response => {\n      console.log(response.message);\n      });\n      \n    hardCopy = hardCopy.filter(product => product !== removeProduct);\n    setCart(hardCopy);\n  }\n\n  useEffect(() => {\n    const total = () => {\n      let totalVal = 0;\n      for (let i = 0; i < item.length; i++) {\n        totalVal += item[i].price;\n      }\n      setCartTotal(totalVal);\n    };\n    \n    total();\n  }, [item]);\n\n  \n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog as=\"div\" className=\"fixed inset-0 overflow-hidden\" onClose={setOpen}>\n        <div className=\"absolute inset-0 overflow-hidden\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-in-out duration-500\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in-out duration-500\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n\n          <div className=\"fixed inset-y-0 right-0 pl-10 max-w-full flex\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"transform transition ease-in-out duration-500 sm:duration-700\"\n              enterFrom=\"translate-x-full\"\n              enterTo=\"translate-x-0\"\n              leave=\"transform transition ease-in-out duration-500 sm:duration-700\"\n              leaveFrom=\"translate-x-0\"\n              leaveTo=\"translate-x-full\"\n            >\n              <div className=\"w-screen max-w-md\">\n                <div className=\"h-full flex flex-col bg-white shadow-xl overflow-y-scroll\">\n                  <div className=\"flex-1 py-6 overflow-y-auto px-4 sm:px-6\">\n                    <div className=\"flex items-start justify-between\">\n                      <Dialog.Title className=\"text-lg font-medium text-gray-900\">Shopping cart</Dialog.Title>\n                      <div className=\"ml-3 h-7 flex items-center\">\n                        <button\n                          type=\"button\"\n                          className=\"-m-2 p-2 text-gray-400 hover:text-gray-500\"\n                          onClick={() => setOpen(false)}\n                        >\n                          <span className=\"sr-only\">Close panel</span>\n                          <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                        </button>\n                      </div>\n                    </div>\n\n                    {item ? (\n                      <div className=\"mt-8\">\n                      <div className=\"flow-root\">\n                        <ul className=\"-my-6 divide-y divide-gray-200\">\n                          {item.map((product, idx) => (\n                            <li key={idx} className=\"py-6 flex\">\n                              <div className=\"flex-shrink-0 w-24 h-24 border border-gray-200 rounded-md overflow-hidden\">\n                                <img\n                                  src={product.image}\n                                  alt=\"\"\n                                  className=\"w-full h-full object-center object-cover\"\n                                />\n                              </div>\n\n                              <div className=\"ml-4 flex-1 flex flex-col\">\n                                <div>\n                                  <div className=\"flex justify-between text-base font-medium text-gray-900\">\n                                    <h3>\n                                      <a href=\"/#\">{product.name}</a>\n                                    </h3>\n                                    <p className=\"ml-4\">{product.price}</p>\n                                  </div>\n                                </div>\n                                <div className=\"flex-1 flex items-end justify-between text-sm\">\n                                  <p className=\"text-gray-500\">Qty {product.quantity}</p>\n\n                                  <div className=\"flex\">\n                                    <button type=\"button\" \n                                            className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n                                            onClick={() => removeItem(product)}>\n                                      Remove\n                                    </button>\n                                  </div>\n                                </div>\n                              </div>\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                    </div>\n                    ) : (<> </>)}\n                  </div>\n\n                  <div className=\"border-t border-gray-200 py-6 px-4 sm:px-6\">\n                    <div className=\"flex justify-between text-base font-medium text-gray-900\">\n                      <p>Subtotal</p>\n                      <p>${cartTotal}</p>\n                    </div>\n                    <p className=\"mt-0.5 text-sm text-gray-500\">Shipping and taxes calculated at checkout.</p>\n                    <div className=\"mt-6\">\n                      <a\n                        href='/#'\n                        onClick={() =>checkout()}\n                        className=\"flex justify-center items-center px-6 py-3 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\n                      >\n                        Checkout\n                      </a>\n                    </div>\n                    <div className=\"mt-6 flex justify-center text-sm text-center text-gray-500\">\n                      <p>\n                        or{' '}\n                        <button\n                          type=\"button\"\n                          className=\"text-indigo-600 font-medium hover:text-indigo-500\"\n                          onClick={() => setOpen(false)}\n                        >\n                          Continue Shopping<span aria-hidden=\"true\"> &rarr;</span>\n                        </button>\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}","import React, {useState} from 'react'\nimport Cart from './Cart';\n\nfunction Dashboard ({item, products, setCart}) {\n    const [showItem, setShowItem] = useState(false)\n\n    const addItem = (newItem) => {\n        console.log(newItem);\n        if (item.some(e => e.id === newItem.id)) {\n            alert('Item already added!');\n        } else{\n\n            async function addItemToCart(newItem) {\n                const response = await fetch('/add_to_cart', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({'new-item': newItem}),\n                    });\n                const movies = await response.json();\n                return movies;\n              }\n\n            addItemToCart(newItem).then(response => {\n            console.log(response.message);\n            });\n            // let response = await fetch('/add_to_cart', {\n            // method: 'POST',\n            // headers: {\n            //     'Content-Type': 'application/json',\n            // },\n            // body: JSON.stringify({'new-item': newItem}),\n            // })\n            // .then((response) => response.json())\n            // .then((data) => {\n                \n            // });\n\n            const newCart = [...item, newItem];\n            setCart(newCart);\n        }  \n        \n        setShowItem(item => !item);\n    }\n\n    \n    return (\n        \n        <>\n        <div className=\"bg-white\">\n            <div className=\"max-w-2xl mx-auto py-16 px-4 sm:py-24 sm:px-6 lg:max-w-7xl lg:px-8\">\n                <h2 className=\"sr-only\">Products</h2>\n\n                {products ? (\n                    <div className=\"grid grid-cols-1 gap-y-10 sm:grid-cols-2 gap-x-6 lg:grid-cols-3 xl:grid-cols-4 xl:gap-x-8\">\n                    {products.map((product) => (\n                            <>\n                            <a key={product.id} href='/#' className=\"group\">\n                                <div className=\"w-full aspect-w-1 aspect-h-1 bg-gray-200 rounded-lg overflow-hidden xl:aspect-w-7 xl:aspect-h-8\">\n                                    <img\n                                    src={product.image}\n                                    alt={product.description}\n                                    className=\"w-full h-full object-center object-cover group-hover:opacity-75\"\n                                    />\n                                </div>\n                                <h3 className=\"mt-4 text-sm text-gray-700\">{product.name}</h3>\n                                <div className=\"flex\">\n                                    <p className=\"flex-auto mt-1 text-lg font-medium text-gray-900\">${product.price} </p>\n                                    <button class=\"w-1/4 flex-auto bg-transparent hover:text-indigo-600 items-center justify-center rounded-md border border-gray-300\" \n                                            type=\"button\" \n                                            onClick={() => addItem(product)}>Add to bag</button>\n                                    \n                                </div>\n                            </a>\n                            \n                            </>\n                    ))}\n                    </div>\n                ): \n                (<> </>)}\n\n                \n            </div>\n\n        </div>\n\n        <Cart item={item} open={showItem} setOpen={setShowItem} setCart={setCart}/>\n        </>\n    );\n}\n\nexport default Dashboard;","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment, useState } from 'react'\nimport { Popover, Transition } from '@headlessui/react'\nimport {\n  BadgeCheckIcon,\n  CurrencyDollarIcon,\n  LightningBoltIcon,\n  MenuIcon,\n  XIcon,\n} from '@heroicons/react/outline'\nimport { DiPostgresql, DiPython, DiReact, DiHeroku } from 'react-icons/di'\nimport { ChevronDownIcon } from '@heroicons/react/solid'\n\nimport React from 'react';\nimport Cart from './Cart';\n\n\nconst solutions = [\n  {\n    name: 'Duc (Duketamin) Vu',\n    description: 'MS Azure is trashhhh',\n    href: 'https://github.com/Bodisoem',\n    icon: BadgeCheckIcon,\n  },\n  {\n    name: 'Linh Ngo',\n    description: 'You know who',\n    href: 'https://github.com/oxlngo',\n    icon: CurrencyDollarIcon,\n  },\n  {\n    name: 'Vivian Do',\n    description: \"Slayyy\",\n    href: 'https://github.com/odnaiviv',\n    icon: LightningBoltIcon\n  },\n]\n\nconst resources = [\n  {\n    name: 'PostgresQL',\n    description: 'Database',\n    href: '#',\n    icon: DiPostgresql,\n  },\n  {\n    name: 'Flask',\n    description: 'Server/API side',\n    href: '#',\n    icon: DiPython,\n  },\n  {\n    name: 'ReactJS',\n    description: 'Client side',\n    href: '#',\n    icon: DiReact,\n  },\n  {\n    name: 'Heroku',\n    description: 'Deploy',\n    href: '#',\n    icon: DiHeroku\n  },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\n\n\nfunction Header({ username, item, setCart }) {\n  const [showItem, setShowItem] = useState(false)\n\n  return (\n    <Popover className=\"relative bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n        <div className=\"flex justify-between items-center border-b-2 border-gray-100 py-6 md:justify-start md:space-x-10\">\n          <div className=\"flex justify-start lg:w-0 lg:flex-1\">\n            <a href=\"/#\">\n              <span className=\"sr-only\">Workflow</span>\n              <img\n                className=\"h-8 w-auto sm:h-10\"\n                src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n                alt=\"workflow\"\n              />\n            </a>\n          </div>\n          <div className=\"-mr-2 -my-2 md:hidden\">\n            <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n              <span className=\"sr-only\">Open menu</span>\n              <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </Popover.Button>\n          </div>\n          <Popover.Group as=\"nav\" className=\"hidden md:flex space-x-10\">\n            <Popover className=\"relative\">\n              {({ open }) => (\n                <>\n                  <Popover.Button\n                    className={classNames(\n                      open ? 'text-gray-900' : 'text-gray-500',\n                      'group bg-white rounded-md inline-flex items-center text-base font-medium hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n                    )}\n                  >\n                    <span>About us</span>\n                    <ChevronDownIcon\n                      className={classNames(\n                        open ? 'text-gray-600' : 'text-gray-400',\n                        'ml-2 h-5 w-5 group-hover:text-gray-500'\n                      )}\n                      aria-hidden=\"true\"\n                    />\n                  </Popover.Button>\n\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-200\"\n                    enterFrom=\"opacity-0 translate-y-1\"\n                    enterTo=\"opacity-100 translate-y-0\"\n                    leave=\"transition ease-in duration-150\"\n                    leaveFrom=\"opacity-100 translate-y-0\"\n                    leaveTo=\"opacity-0 translate-y-1\"\n                  >\n                    <Popover.Panel className=\"absolute z-10 -ml-4 mt-3 transform px-2 w-screen max-w-md sm:px-0 lg:ml-0 lg:left-1/2 lg:-translate-x-1/2\">\n                      <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                        <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8\">\n                          {solutions.map((item) => (\n                            <a\n                              key={item.name}\n                              href={item.href}\n                              className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\"\n                            >\n                              <item.icon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                              <div className=\"ml-4\">\n                                <p className=\"text-base font-medium text-gray-900\">{item.name}</p>\n                                <p className=\"mt-1 text-sm text-gray-500\">{item.description}</p>\n                              </div>\n                            </a>\n                          ))}\n                        </div>\n                      </div>\n                    </Popover.Panel>\n                  </Transition>\n                </>\n              )}\n            </Popover>\n\n            <a href=\"/#\" className=\"text-base font-medium text-gray-500 hover:text-gray-900\">\n              Pricing\n            </a>\n            <Popover className=\"relative\">\n              {({ open }) => (\n                <>\n                  <Popover.Button\n                    className={classNames(\n                      open ? 'text-gray-900' : 'text-gray-500',\n                      'group bg-white rounded-md inline-flex items-center text-base font-medium hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n                    )}\n                  >\n                    <span>Tech Stack</span>\n                    <ChevronDownIcon\n                      className={classNames(\n                        open ? 'text-gray-600' : 'text-gray-400',\n                        'ml-2 h-5 w-5 group-hover:text-gray-500'\n                      )}\n                      aria-hidden=\"true\"\n                    />\n                  </Popover.Button>\n\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-200\"\n                    enterFrom=\"opacity-0 translate-y-1\"\n                    enterTo=\"opacity-100 translate-y-0\"\n                    leave=\"transition ease-in duration-150\"\n                    leaveFrom=\"opacity-100 translate-y-0\"\n                    leaveTo=\"opacity-0 translate-y-1\"\n                  >\n                    <Popover.Panel className=\"absolute z-10 left-1/2 transform -translate-x-1/2 mt-3 px-2 w-screen max-w-md sm:px-0\">\n                      <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                        <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8\">\n                          {resources.map((item) => (\n                            <a\n                              key={item.name}\n                              href={item.href}\n                              className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\"\n                            >\n                              <item.icon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                              <div className=\"ml-4\">\n                                <p className=\"text-base font-medium text-gray-900\">{item.name}</p>\n                                <p className=\"mt-1 text-sm text-gray-500\">{item.description}</p>\n                              </div>\n                            </a>\n                          ))}\n                        </div>\n                      </div>\n                    </Popover.Panel>\n                  </Transition>\n                </>\n              )}\n            </Popover>\n          </Popover.Group>\n          <div className=\"ml-80 right-0 static hidden md:flex items-center justify-end md:flex-1 lg:w-0 space-x-0\">\n            <div className=\"ml-40 hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n              <button class=\"btn static ml-40 whitespace-nowrap inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-black bg-yellow-500 hover:bg-yellow-400\"\n                type=\"button\"\n                onClick={() => setShowItem(true)}>{username}'s Shopping Cart</button>\n            </div>\n\n            <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n              <form method=\"POST\" action=\"/logout\">\n                <button className=\"btn ml-8 whitespace-nowrap inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700\" >Log Out</button>\n              </form>\n            </div>\n            <Cart item={item} open={showItem} setOpen={setShowItem} setCart={setCart} />\n          </div>\n\n\n          \n        </div>\n      </div>\n\n      <></>\n\n      <Transition\n        as={Fragment}\n        enter=\"duration-200 ease-out\"\n        enterFrom=\"opacity-0 scale-95\"\n        enterTo=\"opacity-100 scale-100\"\n        leave=\"duration-100 ease-in\"\n        leaveFrom=\"opacity-100 scale-100\"\n        leaveTo=\"opacity-0 scale-95\"\n      >\n        <Popover.Panel focus className=\"absolute top-0 inset-x-0 p-2 transition transform origin-top-right md:hidden\">\n          <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 bg-white divide-y-2 divide-gray-50\">\n            <div className=\"pt-5 pb-6 px-5\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <img\n                    className=\"h-8 w-auto\"\n                    src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n                    alt=\"Workflow\"\n                  />\n                </div>\n                <div className=\"-mr-2\">\n                  <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n                    <span className=\"sr-only\">Close menu</span>\n                    <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </Popover.Button>\n                </div>\n              </div>\n              <div className=\"mt-6\">\n                <nav className=\"grid gap-y-8\">\n                  {solutions.map((item) => (\n                    <a\n                      key={item.name}\n                      href={item.href}\n                      className=\"-m-3 p-3 flex items-center rounded-md hover:bg-gray-50\"\n                    >\n                      <item.icon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                      <span className=\"ml-3 text-base font-medium text-gray-900\">{item.name}</span>\n                    </a>\n                  ))}\n                </nav>\n              </div>\n            </div>\n            <div className=\"py-6 px-5 space-y-6\">\n              <div className=\"grid grid-cols-2 gap-y-4 gap-x-8\">\n                <a href=\"/#\" className=\"text-base font-medium text-gray-900 hover:text-gray-700\">\n                  Pricing\n                </a>\n\n                <a href=\"/#\" className=\"text-base font-medium text-gray-900 hover:text-gray-700\">\n                  Docs\n                </a>\n              </div>\n              <div>\n                <a\n                  href=\"/#\"\n                  className=\"w-full flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\n                >\n                  Sign up\n                </a>\n                <p className=\"mt-6 text-center text-base font-medium text-gray-500\">\n                  Existing customer?{' '}\n                  <a href=\"/#\" className=\"text-indigo-600 hover:text-indigo-500\">\n                    Sign in\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </Popover.Panel>\n      </Transition>\n    </Popover>\n  )\n}\n\nexport default Header;","import React from \"react\";\n\nfunction Footer(props) {\n  return (\n    <>\n      <footer\n        className={\n          (props.absolute\n            ? \"absolute w-full bottom-0 bg-gray-900\"\n            : \"relative\") + \" pb-6\"\n        }\n      >\n        <div className=\"container mx-auto px-4\">\n          <hr className=\"mb-6 border-b-1 border-gray-700\" />\n          <div className=\"flex flex-wrap items-center md:justify-between justify-center\">\n            <div className=\"w-full md:w-4/12 px-4\">\n              <div className=\"text-sm text-white font-semibold py-1\">\n                Copyright © {new Date().getFullYear()}{\" \"}\n                <a\n                  href=\"/#\"\n                  className=\"text-white hover:text-gray-400 text-sm font-semibold py-1\"\n                >\n                  Propriete Centre\n                </a>\n              </div>\n            </div>\n            <div className=\"w-full md:w-8/12 px-4\">\n              <ul className=\"flex flex-wrap list-none md:justify-end  justify-center\">\n                <li>\n                  <a\n                    href=\"/#\"\n                    className=\"text-white hover:text-gray-400 text-sm font-semibold block py-1 px-3\"\n                  >\n                    Propriete Centre\n                  </a>\n                </li>\n                <li>\n                  <a\n                    href=\"/#\"\n                    className=\"text-white hover:text-gray-400 text-sm font-semibold block py-1 px-3\"\n                  >\n                    About Us\n                  </a>\n                </li>\n                <li>\n                  <a\n                    href=\"/#\"\n                    className=\"text-white hover:text-gray-400 text-sm font-semibold block py-1 px-3\"\n                  >\n                    Blog\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </>\n  );\n}\n\nexport default Footer;","import './App.css';\nimport React, { useState } from 'react'\n\nimport Hero from './components/Hero';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nfunction App() {\n\n  const args = JSON.parse(document.getElementById(\"data\").text);\n  const [products, setProduct] = useState(args.list_item);\n  const [cart, setCart] = useState(args.user_cart);\n  console.log(products);\n  console.log(cart);\n\n  return (\n    <>\n      <Header username={args.user_name} item={cart} setCart={setCart} />\n      <main>\n        <section className=\"relative w-full h-full\">\n          <div>\n            <Hero />\n          </div>\n          <div>\n            <Dashboard products={products} item={cart} setCart={setCart} absolute setProduct={setProduct} />\n          </div>\n          <Footer absolute />\n        </section>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}